{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\src\\\\pages\\\\InfiniteGrid\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteGridPage = () => {\n  _s();\n  const images = ['https://images.pexels.com/photos/18173391/pexels-photo-18173391.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/24460824/pexels-photo-24460824.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/21533296/pexels-photo-21533296.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/3009205/pexels-photo-3009205.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27143629/pexels-photo-27143629.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27216502/pexels-photo-27216502.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27139481/pexels-photo-27139481.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/17266857/pexels-photo-17266857.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/5290758/pexels-photo-5290758.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/5267760/pexels-photo-5267760.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1105766/pexels-photo-1105766.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/425160/pexels-photo-425160.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1038935/pexels-photo-1038935.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/2681319/pexels-photo-2681319.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1122409/pexels-photo-1122409.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1010079/pexels-photo-1010079.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/763097/pexels-photo-763097.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/711022/pexels-photo-711022.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1229102/pexels-photo-1229102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1115204/pexels-photo-1115204.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/3299386/pexels-photo-3299386.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/925743/pexels-photo-925743.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1258333/pexels-photo-1258333.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1529881/pexels-photo-1529881.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'];\n  const [isDisplay] = useState(true);\n  useEffect(() => {\n    let ww = window.innerWidth;\n    let wh = window.innerHeight;\n    class Core {\n      constructor() {\n        this.isDisplay = void 0;\n        this.lastClickedPlane = null;\n        this.initialScreenX = 0;\n        this.initialScreenY = 0;\n        this.tx = 0;\n        this.ty = 0;\n        this.cx = 0;\n        this.cy = 0;\n        this.diff = 0;\n        this.on = {\n          x: 0,\n          y: 0\n        };\n        this.max = {\n          x: 0,\n          y: 0\n        };\n        this.isDragging = false;\n        this.isMoved = false;\n        this.start = {\n          x: 0,\n          y: 0\n        };\n        this.end = {\n          x: 0,\n          y: 0\n        };\n        this.tl = gsap.timeline({\n          paused: true\n        });\n        this.el = document.querySelector('.js-grid');\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.OrthographicCamera(ww / -2, ww / 2, wh / 2, wh / -2, 1, 1000);\n        this.renderer = new THREE.WebGLRenderer({\n          antialias: true,\n          alpha: true\n        });\n        this.planes = [];\n        this.raycaster = new THREE.Raycaster();\n        this.mouse = new THREE.Vector2();\n        this.onWindowResize = () => {\n          ww = window.innerWidth;\n          wh = window.innerHeight;\n          this.camera.left = ww / -2;\n          this.camera.right = ww / 2;\n          this.camera.top = wh / 2;\n          this.camera.bottom = wh / -2;\n          this.camera.updateProjectionMatrix();\n          this.renderer.setSize(ww, wh);\n          this.resize();\n        };\n        this.onClick = event => {\n          if (this.isMoved) return;\n\n          // 获取 DOM 元素\n          const imgElement = document.querySelector('img');\n          const divElement = document.querySelector('.DOM');\n          const BUTTONElement = document.querySelector('.BUTTON');\n\n          // 计算鼠标位置\n          this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\n          this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n          this.raycaster.setFromCamera(this.mouse, this.camera);\n          const intersects = this.raycaster.intersectObjects(this.planes.map(plane => plane.mesh));\n          if (intersects.length === 0) return;\n          const intersectedObject = intersects[0].object;\n          const plane = this.planes.find(p => p.mesh === intersectedObject);\n          if (!plane) return;\n          const position = plane.position.clone();\n          const {\n            width,\n            height\n          } = plane.rect;\n          const vector = position.project(this.camera);\n          const screenX = (vector.x + 1) / 2 * window.innerWidth - width / 2;\n          const screenY = -(vector.y - 1) / 2 * window.innerHeight - height / 2;\n          const animate = options => {\n            gsap.to(imgElement, options);\n            gsap.to(divElement, options);\n            gsap.to(BUTTONElement, options);\n          };\n          if (this.isDisplay) {\n            // 保存当前 plane 信息\n            this.lastClickedPlane = plane;\n            this.initialScreenX = screenX;\n            this.initialScreenY = screenY;\n\n            // 设置 imgElement\n            const src = plane.el.dataset.src;\n            imgElement.src = src;\n            imgElement.style.width = `${width}px`;\n            imgElement.style.height = `${height}px`;\n\n            // 初始位置设置\n            gsap.set(imgElement, {\n              x: screenX,\n              y: screenY\n            });\n            gsap.set(divElement, {\n              display: 'block'\n            });\n            gsap.set(BUTTONElement, {\n              opacity: 1\n            });\n\n            // 动画\n            animate({\n              duration: 0.7,\n              ease: 'power3.inOut',\n              x: window.innerWidth / 2 - width / 2,\n              y: window.innerHeight / 2 - height / 2,\n              backgroundColor: 'white',\n              opacity: 1\n            });\n            this.setIsDisplay(false);\n          } else if (this.lastClickedPlane) {\n            // 还原到初始位置\n            animate({\n              duration: 0.7,\n              ease: 'power2.inOut',\n              x: this.initialScreenX,\n              y: this.initialScreenY,\n              backgroundColor: 'transparent',\n              opacity: 0,\n              onComplete: () => {\n                divElement.style.display = 'none'; // 隐藏元素\n                this.setIsDisplay(true);\n              }\n            });\n          }\n        };\n        this.tick = () => {\n          const xDiff = this.tx - this.cx;\n          const yDiff = this.ty - this.cy;\n          this.cx += xDiff * 0.085;\n          this.cx = Math.round(this.cx * 100) / 100;\n          this.cy += yDiff * 0.085;\n          this.cy = Math.round(this.cy * 100) / 100;\n          this.diff = Math.max(Math.abs(yDiff * 0.0001), Math.abs(xDiff * 0.0001));\n          this.planes.length && this.planes.forEach(plane => plane.update(this.cx, this.cy, this.max, this.diff));\n          this.renderer.render(this.scene, this.camera);\n        };\n        this.onMouseMove = ({\n          clientX,\n          clientY\n        }) => {\n          if (!this.isDragging) return;\n          this.isMoved = true;\n          this.tx = this.on.x + clientX * 2.5;\n          this.ty = this.on.y - clientY * 2.5;\n        };\n        this.onMouseDown = ({\n          clientX,\n          clientY\n        }) => {\n          if (this.isDragging) return;\n          this.isMoved = false;\n          this.isDragging = true;\n          this.on.x = this.tx - clientX * 2.5;\n          this.on.y = this.ty + clientY * 2.5;\n          this.start.x = clientX;\n          this.start.y = clientY;\n        };\n        this.onMouseUp = ({\n          clientX,\n          clientY\n        }) => {\n          if (!this.isDragging) return;\n          this.isDragging = false;\n          this.end.x = clientX;\n          this.end.y = clientY;\n          if (Math.abs(this.end.x - this.start.x) < 5 && Math.abs(this.end.y - this.start.y) < 5) {\n            this.isMoved = false;\n          } else {\n            this.isMoved = true;\n          }\n        };\n        this.onTouchMove = event => {\n          event.preventDefault();\n          if (!this.isDragging) return;\n          this.isMoved = true;\n          const touch = event.touches[0];\n          this.tx = this.on.x + touch.clientX * 2.5;\n          this.ty = this.on.y - touch.clientY * 2.5;\n        };\n        this.onTouchStart = event => {\n          if (this.isDragging) return;\n          this.isMoved = false;\n          this.isDragging = true;\n          const touch = event.touches[0];\n          this.on.x = this.tx - touch.clientX * 2.5;\n          this.on.y = this.ty + touch.clientY * 2.5;\n          this.start.x = touch.clientX;\n          this.start.y = touch.clientY;\n        };\n        this.onTouchEnd = event => {\n          if (!this.isDragging) return;\n          this.isDragging = false;\n          const touch = event.changedTouches[0];\n          this.end.x = touch.clientX;\n          this.end.y = touch.clientY;\n          if (Math.abs(this.end.x - this.start.x) < 5 && Math.abs(this.end.y - this.start.y) < 5) {\n            this.isMoved = false;\n          } else {\n            this.isMoved = true;\n          }\n        };\n        this.resize = () => {\n          this.planes.forEach(plane => {\n            plane.resize();\n            plane.update(this.cx, this.cy, this.max, this.diff);\n          });\n          const {\n            bottom,\n            right\n          } = this.el.getBoundingClientRect();\n          this.max.x = right;\n          this.max.y = bottom;\n        };\n        this.isDisplay = true;\n        this.camera.lookAt(this.scene.position);\n        this.camera.position.z = 1;\n        this.renderer.setSize(ww, wh);\n        this.renderer.setPixelRatio(gsap.utils.clamp(1, 1.5, window.devicePixelRatio));\n        document.body.appendChild(this.renderer.domElement);\n        this.addPlanes();\n        this.addEvents();\n        this.resize();\n      }\n      addEvents() {\n        gsap.ticker.add(this.tick);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mousedown', this.onMouseDown);\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchmove', this.onTouchMove, {\n          passive: false\n        });\n        window.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        });\n        window.addEventListener('touchend', this.onTouchEnd);\n        window.addEventListener('resize', this.onWindowResize);\n        this.el.addEventListener('click', this.onClick);\n      }\n      addPlanes() {\n        const planes = [...document.querySelectorAll('.js-plane')];\n        this.planes = planes.map((el, i) => {\n          const plane = new Plane();\n          plane.init(el, i);\n          this.scene.add(plane);\n          return plane;\n        });\n      }\n      setIsDisplay(display) {\n        this.isDisplay = display;\n      }\n    }\n    const loader = new THREE.TextureLoader();\n    const vertexShader = `\n        precision mediump float;\n\n        uniform float u_diff;\n\n        varying vec2 vUv;\n\n        void main(){\n          vec3 pos = position;\n\n          pos.y *= 1. - u_diff;\n          pos.x *= 1. - u_diff;\n\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);;\n        }\n      `;\n    const fragmentShader = `\n        precision mediump float;\n\n        uniform vec2 u_res;\n        uniform vec2 u_size;\n        \n        uniform sampler2D u_texture;\n        \n        vec2 cover(vec2 screenSize, vec2 imageSize, vec2 uv) {\n          float screenRatio = screenSize.x / screenSize.y;\n          float imageRatio = imageSize.x / imageSize.y;\n        \n          vec2 newSize = screenRatio < imageRatio\n              ? vec2(imageSize.x * (screenSize.y / imageSize.y), screenSize.y)\n              : vec2(screenSize.x, imageSize.y * (screenSize.x / imageSize.x));\n          vec2 newOffset = (screenRatio < imageRatio\n              ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\n              : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n          return uv * screenSize / newSize + newOffset;\n        }\n        \n        float roundBox(vec2 p, vec2 b, float r){\n          return length(max(abs(p)-b+r,0.0))-r;\n        }\n        \n        varying vec2 vUv;\n        \n        void main() {\n          vec2 uv = vUv;\n        \n          vec2 uvCover = cover(u_res, u_size, uv);\n          vec4 texture = texture2D(u_texture, uvCover);\n        \n          vec2 halfSize = u_res * 0.5;\n          vec2 coord = uv * u_res;\n          vec2 p = coord - halfSize;\n        \n          float a = roundBox(p, halfSize, 24.0);\n\n          float boxAlpha = smoothstep(0.0, 1.0, a);\n        \n          vec4 finalColor = vec4(texture.rgb, texture.a * (1.0 - boxAlpha));\n        \n          gl_FragColor = finalColor;\n        }\n\n      `;\n    const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n    const material = new THREE.ShaderMaterial({\n      fragmentShader,\n      vertexShader\n    });\n    class Plane extends THREE.Object3D {\n      constructor(...args) {\n        super(...args);\n        this.el = void 0;\n        this.x = 0;\n        this.y = 0;\n        this.my = 1;\n        this.geometry = geometry;\n        this.material = material.clone();\n        this.texture = void 0;\n        this.mesh = void 0;\n        this.rect = void 0;\n        this.xOffset = 0;\n        this.yOffset = 0;\n        this.update = (x, y, max, diff) => {\n          const {\n            right,\n            bottom\n          } = this.rect;\n          const {\n            u_diff\n          } = this.material.uniforms;\n          this.y = gsap.utils.wrap(-(max.y - bottom), bottom, y * this.my) - this.yOffset;\n          this.x = gsap.utils.wrap(-(max.x - right), right, x) - this.xOffset;\n          u_diff.value = diff;\n          this.position.x = this.x;\n          this.position.y = this.y;\n        };\n      }\n      init(el, i) {\n        this.el = el;\n        this.my = 1;\n        this.material.uniforms = {\n          u_texture: {\n            value: 0\n          },\n          u_res: {\n            value: new THREE.Vector2(1, 1)\n          },\n          u_size: {\n            value: new THREE.Vector2(1, 1)\n          },\n          u_diff: {\n            value: 0\n          }\n        };\n        this.texture = loader.load(this.el.dataset.src, texture => {\n          texture.minFilter = THREE.LinearFilter;\n          texture.generateMipmaps = false;\n          const {\n            naturalWidth,\n            naturalHeight\n          } = texture.image;\n          const {\n            u_size,\n            u_texture\n          } = this.material.uniforms;\n          u_texture.value = texture;\n          u_size.value.x = naturalWidth;\n          u_size.value.y = naturalHeight;\n        });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.add(this.mesh);\n        this.resize();\n      }\n      resize() {\n        this.rect = this.el.getBoundingClientRect();\n        const {\n          left,\n          top,\n          width,\n          height\n        } = this.rect;\n        const {\n          u_res\n        } = this.material.uniforms;\n        this.xOffset = left + width / 2 - window.innerWidth / 2;\n        this.yOffset = top + height / 2 - window.innerHeight / 2;\n        this.position.x = this.xOffset;\n        this.position.y = this.yOffset;\n        u_res.value.x = width;\n        u_res.value.y = height;\n        this.mesh.scale.set(width, height, 1);\n      }\n    }\n    new Core();\n  }, [isDisplay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed w-[150%] h-[200%]  z-[0] grid 2xl:grid-cols-[repeat(6,1fr)] xl:grid-cols-[repeat(4,1fr)] lg:grid-cols-[repeat(4,1fr)] md:grid-cols-[repeat(3,1fr)] grid-cols-[repeat(3,1fr)] left-0 top-0 js-grid\",\n        children: images.map((src, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"js-plane inset-2 absolute m-0 p-0\",\n              \"data-src\": src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page js-page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DOM w-screen h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rounded-3xl object-cover\",\n          alt: \"alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BUTTON fixed bottom-[15%] opacity-0 w-full flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-[#090909] text-lg cursor-pointer  transition-all duration-[0.3s] shadow-[6px_6px_12px_#c5c5c5,-6px_-6px_12px_#ffffff] px-[1.7em] py-[0.7em] rounded-[0.5em] border-solid border-[#e8e8e8] active:text-[#666] active:shadow-[inset_4px_4px_12px_#c5c5c5,inset_-4px_-4px_12px_#ffffff]\",\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteGridPage, \"FaO1JT+1FxNPhap8AOQ51TKmDJQ=\");\n_c = InfiniteGridPage;\nexport default InfiniteGridPage;\nvar _c;\n$RefreshReg$(_c, \"InfiniteGridPage\");","map":{"version":3,"names":["useState","useEffect","THREE","gsap","jsxDEV","_jsxDEV","InfiniteGridPage","_s","images","isDisplay","ww","window","innerWidth","wh","innerHeight","Core","constructor","lastClickedPlane","initialScreenX","initialScreenY","tx","ty","cx","cy","diff","on","x","y","max","isDragging","isMoved","start","end","tl","timeline","paused","el","document","querySelector","scene","Scene","camera","OrthographicCamera","renderer","WebGLRenderer","antialias","alpha","planes","raycaster","Raycaster","mouse","Vector2","onWindowResize","left","right","top","bottom","updateProjectionMatrix","setSize","resize","onClick","event","imgElement","divElement","BUTTONElement","clientX","clientY","setFromCamera","intersects","intersectObjects","map","plane","mesh","length","intersectedObject","object","find","p","position","clone","width","height","rect","vector","project","screenX","screenY","animate","options","to","src","dataset","style","set","display","opacity","duration","ease","backgroundColor","setIsDisplay","onComplete","tick","xDiff","yDiff","Math","round","abs","forEach","update","render","onMouseMove","onMouseDown","onMouseUp","onTouchMove","preventDefault","touch","touches","onTouchStart","onTouchEnd","changedTouches","getBoundingClientRect","lookAt","z","setPixelRatio","utils","clamp","devicePixelRatio","body","appendChild","domElement","addPlanes","addEvents","ticker","add","addEventListener","passive","querySelectorAll","i","Plane","init","loader","TextureLoader","vertexShader","fragmentShader","geometry","PlaneGeometry","material","ShaderMaterial","Object3D","args","my","texture","xOffset","yOffset","u_diff","uniforms","wrap","value","u_texture","u_res","u_size","load","minFilter","LinearFilter","generateMipmaps","naturalWidth","naturalHeight","image","Mesh","scale","children","className","index","fileName","_jsxFileName","lineNumber","columnNumber","alt","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/react/src/pages/InfiniteGrid/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport * as THREE from 'three'\nimport { gsap } from 'gsap'\n\nconst InfiniteGridPage = () => {\n  const images = [\n    'https://images.pexels.com/photos/18173391/pexels-photo-18173391.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/24460824/pexels-photo-24460824.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/21533296/pexels-photo-21533296.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/3009205/pexels-photo-3009205.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27143629/pexels-photo-27143629.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27216502/pexels-photo-27216502.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27139481/pexels-photo-27139481.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/17266857/pexels-photo-17266857.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/5290758/pexels-photo-5290758.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/5267760/pexels-photo-5267760.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1105766/pexels-photo-1105766.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/425160/pexels-photo-425160.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1038935/pexels-photo-1038935.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/2681319/pexels-photo-2681319.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1122409/pexels-photo-1122409.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1010079/pexels-photo-1010079.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/763097/pexels-photo-763097.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/711022/pexels-photo-711022.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1229102/pexels-photo-1229102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1115204/pexels-photo-1115204.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/3299386/pexels-photo-3299386.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/925743/pexels-photo-925743.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1258333/pexels-photo-1258333.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1529881/pexels-photo-1529881.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'\n  ]\n\n  const [isDisplay] = useState(true)\n\n  useEffect(() => {\n    let ww = window.innerWidth\n    let wh = window.innerHeight\n\n    class Core {\n      isDisplay: boolean;\n      lastClickedPlane: Plane | null = null;\n      initialScreenX: number = 0;\n      initialScreenY: number = 0;\n      tx = 0\n      ty = 0\n      cx = 0\n      cy = 0\n      diff = 0\n      on = { x: 0, y: 0 }\n      max = { x: 0, y: 0 }\n      isDragging = false\n      isMoved = false\n      start = { x: 0, y: 0 }\n      end = { x: 0, y: 0 }\n      tl = gsap.timeline({ paused: true })\n      el = document.querySelector('.js-grid') as HTMLElement\n      scene = new THREE.Scene()\n      camera = new THREE.OrthographicCamera(\n        ww / -2,\n        ww / 2,\n        wh / 2,\n        wh / -2,\n        1,\n        1000\n      )\n      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n      planes: Plane[] = []\n      raycaster = new THREE.Raycaster()\n      mouse = new THREE.Vector2()\n\n      constructor() {\n        this.isDisplay = true; \n        this.camera.lookAt(this.scene.position)\n        this.camera.position.z = 1\n        this.renderer.setSize(ww, wh)\n        this.renderer.setPixelRatio(\n          gsap.utils.clamp(1, 1.5, window.devicePixelRatio)\n        )\n        document.body.appendChild(this.renderer.domElement)\n        this.addPlanes()\n        this.addEvents()\n        this.resize()\n      }\n\n      addEvents() {\n        gsap.ticker.add(this.tick)\n\n        window.addEventListener('mousemove', this.onMouseMove)\n        window.addEventListener('mousedown', this.onMouseDown)\n        window.addEventListener('mouseup', this.onMouseUp)\n        window.addEventListener('touchmove', this.onTouchMove, {\n          passive: false\n        })\n        window.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        })\n        window.addEventListener('touchend', this.onTouchEnd)\n        window.addEventListener('resize', this.onWindowResize)\n        this.el.addEventListener('click', this.onClick)\n      }\n\n      addPlanes() {\n        const planes = [...document.querySelectorAll('.js-plane')]\n        this.planes = planes.map((el, i) => {\n          const plane = new Plane()\n          plane.init(el as HTMLElement, i)\n          this.scene.add(plane)\n          return plane\n        })\n      }\n      onWindowResize = () => {\n        ww = window.innerWidth\n        wh = window.innerHeight\n\n        this.camera.left = ww / -2\n        this.camera.right = ww / 2\n        this.camera.top = wh / 2\n        this.camera.bottom = wh / -2\n        this.camera.updateProjectionMatrix()\n\n        this.renderer.setSize(ww, wh)\n        this.resize()\n      }\n\n      onClick = (event: MouseEvent) => {\n        if (this.isMoved) return;\n      \n        // 获取 DOM 元素\n        const imgElement = document.querySelector('img') as HTMLImageElement;\n        const divElement = document.querySelector('.DOM') as HTMLDivElement;\n        const BUTTONElement = document.querySelector('.BUTTON') as HTMLDivElement;\n      \n        // 计算鼠标位置\n        this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n      \n        const intersects = this.raycaster.intersectObjects(this.planes.map((plane) => plane.mesh));\n      \n        if (intersects.length === 0) return;\n      \n        const intersectedObject = intersects[0].object as THREE.Mesh;\n        const plane = this.planes.find((p) => p.mesh === intersectedObject);\n      \n        if (!plane) return;\n      \n        const position = plane.position.clone();\n        const { width, height } = plane.rect;\n        const vector = position.project(this.camera);\n        const screenX = ((vector.x + 1) / 2) * window.innerWidth - width / 2;\n        const screenY = (-(vector.y - 1) / 2) * window.innerHeight - height / 2;\n      \n        const animate = (options: { [key: string]: any }) => {\n          gsap.to(imgElement, options);\n          gsap.to(divElement, options);\n          gsap.to(BUTTONElement, options);\n        };\n      \n        if (this.isDisplay) {\n          // 保存当前 plane 信息\n          this.lastClickedPlane = plane;\n          this.initialScreenX = screenX;\n          this.initialScreenY = screenY;\n      \n          // 设置 imgElement\n          const src = plane.el.dataset.src!;\n          imgElement.src = src;\n          imgElement.style.width = `${width}px`;\n          imgElement.style.height = `${height}px`;\n      \n          // 初始位置设置\n          gsap.set(imgElement, { x: screenX, y: screenY });\n          gsap.set(divElement, { display: 'block' });\n          gsap.set(BUTTONElement, { opacity: 1 });\n      \n          // 动画\n          animate({\n            duration: 0.7,\n            ease: 'power3.inOut',\n            x: window.innerWidth / 2 - width / 2,\n            y: window.innerHeight / 2 - height / 2,\n            backgroundColor: 'white',\n            opacity: 1\n          });\n      \n          this.setIsDisplay(false);\n        } else if (this.lastClickedPlane) {\n          // 还原到初始位置\n          animate({\n            duration: 0.7,\n            ease: 'power2.inOut',\n            x: this.initialScreenX,\n            y: this.initialScreenY,\n            backgroundColor: 'transparent',\n            opacity: 0,\n            onComplete: () => {\n              divElement.style.display = 'none'; // 隐藏元素\n              this.setIsDisplay(true);\n            }\n          });\n        }\n      };\n      \n\n      setIsDisplay(display: boolean) {\n        this.isDisplay = display;\n      }\n      \n\n      tick = () => {\n        const xDiff = this.tx - this.cx\n        const yDiff = this.ty - this.cy\n\n        this.cx += xDiff * 0.085\n        this.cx = Math.round(this.cx * 100) / 100\n\n        this.cy += yDiff * 0.085\n        this.cy = Math.round(this.cy * 100) / 100\n\n        this.diff = Math.max(Math.abs(yDiff * 0.0001), Math.abs(xDiff * 0.0001))\n\n        this.planes.length &&\n          this.planes.forEach((plane) =>\n            plane.update(this.cx, this.cy, this.max, this.diff)\n          )\n\n        this.renderer.render(this.scene, this.camera)\n      }\n\n      onMouseMove = ({ clientX, clientY }: MouseEvent) => {\n        if (!this.isDragging) return\n        this.isMoved = true\n        this.tx = this.on.x + clientX * 2.5\n        this.ty = this.on.y - clientY * 2.5\n      }\n\n      onMouseDown = ({ clientX, clientY }: MouseEvent) => {\n        if (this.isDragging) return\n        this.isMoved = false\n        this.isDragging = true\n        this.on.x = this.tx - clientX * 2.5\n        this.on.y = this.ty + clientY * 2.5\n        this.start.x = clientX\n        this.start.y = clientY\n      }\n\n      onMouseUp = ({ clientX, clientY }: MouseEvent) => {\n        if (!this.isDragging) return\n        this.isDragging = false\n        this.end.x = clientX\n        this.end.y = clientY\n\n        if (\n          Math.abs(this.end.x - this.start.x) < 5 &&\n          Math.abs(this.end.y - this.start.y) < 5\n        ) {\n          this.isMoved = false\n        } else {\n          this.isMoved = true\n        }\n      }\n\n      onTouchMove = (event: TouchEvent) => {\n        event.preventDefault()\n        if (!this.isDragging) return\n        this.isMoved = true\n        const touch = event.touches[0]\n        this.tx = this.on.x + touch.clientX * 2.5\n        this.ty = this.on.y - touch.clientY * 2.5\n      }\n\n      onTouchStart = (event: TouchEvent) => {\n        if (this.isDragging) return\n        this.isMoved = false\n        this.isDragging = true\n        const touch = event.touches[0]\n        this.on.x = this.tx - touch.clientX * 2.5\n        this.on.y = this.ty + touch.clientY * 2.5\n        this.start.x = touch.clientX\n        this.start.y = touch.clientY\n      }\n\n      onTouchEnd = (event: TouchEvent) => {\n        if (!this.isDragging) return\n        this.isDragging = false\n        const touch = event.changedTouches[0]\n        this.end.x = touch.clientX\n        this.end.y = touch.clientY\n\n        if (\n          Math.abs(this.end.x - this.start.x) < 5 &&\n          Math.abs(this.end.y - this.start.y) < 5\n        ) {\n          this.isMoved = false\n        } else {\n          this.isMoved = true\n        }\n      }\n\n      resize = () => {\n        this.planes.forEach((plane) => {\n          plane.resize()\n          plane.update(this.cx, this.cy, this.max, this.diff)\n        })\n        const { bottom, right } = this.el.getBoundingClientRect()\n\n        this.max.x = right\n        this.max.y = bottom\n      }\n    }\n    const loader = new THREE.TextureLoader()\n\n    const vertexShader = `\n        precision mediump float;\n\n        uniform float u_diff;\n\n        varying vec2 vUv;\n\n        void main(){\n          vec3 pos = position;\n\n          pos.y *= 1. - u_diff;\n          pos.x *= 1. - u_diff;\n\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);;\n        }\n      `\n\n    const fragmentShader = `\n        precision mediump float;\n\n        uniform vec2 u_res;\n        uniform vec2 u_size;\n        \n        uniform sampler2D u_texture;\n        \n        vec2 cover(vec2 screenSize, vec2 imageSize, vec2 uv) {\n          float screenRatio = screenSize.x / screenSize.y;\n          float imageRatio = imageSize.x / imageSize.y;\n        \n          vec2 newSize = screenRatio < imageRatio\n              ? vec2(imageSize.x * (screenSize.y / imageSize.y), screenSize.y)\n              : vec2(screenSize.x, imageSize.y * (screenSize.x / imageSize.x));\n          vec2 newOffset = (screenRatio < imageRatio\n              ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\n              : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n          return uv * screenSize / newSize + newOffset;\n        }\n        \n        float roundBox(vec2 p, vec2 b, float r){\n          return length(max(abs(p)-b+r,0.0))-r;\n        }\n        \n        varying vec2 vUv;\n        \n        void main() {\n          vec2 uv = vUv;\n        \n          vec2 uvCover = cover(u_res, u_size, uv);\n          vec4 texture = texture2D(u_texture, uvCover);\n        \n          vec2 halfSize = u_res * 0.5;\n          vec2 coord = uv * u_res;\n          vec2 p = coord - halfSize;\n        \n          float a = roundBox(p, halfSize, 24.0);\n\n          float boxAlpha = smoothstep(0.0, 1.0, a);\n        \n          vec4 finalColor = vec4(texture.rgb, texture.a * (1.0 - boxAlpha));\n        \n          gl_FragColor = finalColor;\n        }\n\n      `\n\n    const geometry = new THREE.PlaneGeometry(1, 1, 1, 1)\n    const material = new THREE.ShaderMaterial({\n      fragmentShader,\n      vertexShader\n    })\n\n    class Plane extends THREE.Object3D {\n      el!: HTMLElement\n      x = 0\n      y = 0\n      my = 1\n      geometry = geometry\n      material = material.clone()\n      texture!: THREE.Texture\n      mesh!: THREE.Mesh\n      rect!: DOMRect\n      xOffset = 0\n      yOffset = 0\n      declare position: any\n\n      init(el: HTMLElement, i: number) {\n        this.el = el\n        this.my = 1\n\n        this.material.uniforms = {\n          u_texture: { value: 0 },\n          u_res: { value: new THREE.Vector2(1, 1) },\n          u_size: { value: new THREE.Vector2(1, 1) },\n          u_diff: { value: 0 }\n        }\n\n        this.texture = loader.load(\n          this.el.dataset.src!,\n          (texture: {\n            minFilter: number\n            generateMipmaps: boolean\n            image: { naturalWidth: any; naturalHeight: any }\n          }) => {\n            texture.minFilter = THREE.LinearFilter\n            texture.generateMipmaps = false\n\n            const { naturalWidth, naturalHeight } = texture.image\n            const { u_size, u_texture } = this.material.uniforms\n\n            u_texture.value = texture\n            u_size.value.x = naturalWidth\n            u_size.value.y = naturalHeight\n          }\n        )\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n\n        this.resize()\n      }\n\n      update = (\n        x: number,\n        y: number,\n        max: { x: number; y: number },\n        diff: number\n      ) => {\n        const { right, bottom } = this.rect\n        const { u_diff } = this.material.uniforms\n\n        this.y =\n          gsap.utils.wrap(-(max.y - bottom), bottom, y * this.my) - this.yOffset\n        this.x = gsap.utils.wrap(-(max.x - right), right, x) - this.xOffset\n\n        u_diff.value = diff\n\n        this.position.x = this.x\n        this.position.y = this.y\n      }\n\n      resize() {\n        this.rect = this.el.getBoundingClientRect()\n\n        const { left, top, width, height } = this.rect\n        const { u_res } = this.material.uniforms\n\n        this.xOffset = left + width / 2 - window.innerWidth / 2\n        this.yOffset = top + height / 2 - window.innerHeight / 2\n\n        this.position.x = this.xOffset\n        this.position.y = this.yOffset\n\n        u_res.value.x = width\n        u_res.value.y = height\n\n        this.mesh.scale.set(width, height, 1)\n      }\n    }\n\n    new Core()\n  }, [isDisplay])\n\n  return (\n    <div>\n      <div>\n        <div className='fixed w-[150%] h-[200%]  z-[0] grid 2xl:grid-cols-[repeat(6,1fr)] xl:grid-cols-[repeat(4,1fr)] lg:grid-cols-[repeat(4,1fr)] md:grid-cols-[repeat(3,1fr)] grid-cols-[repeat(3,1fr)] left-0 top-0 js-grid'>\n          {images.map((src, index) => {\n            return (\n              <div className='relative' key={index}>\n                <figure\n                  className='js-plane inset-2 absolute m-0 p-0'\n                  data-src={src}\n                ></figure>\n              </div>\n            )\n          })}\n        </div>\n        <div className='page js-page'></div>\n        <div className='DOM w-screen h-screen'>\n          <img className='rounded-3xl object-cover' alt='alt' />\n        </div>\n      </div>\n      <div className='BUTTON fixed bottom-[15%] opacity-0 w-full flex justify-center'>\n        <button className='text-[#090909] text-lg cursor-pointer  transition-all duration-[0.3s] shadow-[6px_6px_12px_#c5c5c5,-6px_-6px_12px_#ffffff] px-[1.7em] py-[0.7em] rounded-[0.5em] border-solid border-[#e8e8e8] active:text-[#666] active:shadow-[inset_4px_4px_12px_#c5c5c5,inset_-4px_-4px_12px_#ffffff]'>\n          Click me\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default InfiniteGridPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}