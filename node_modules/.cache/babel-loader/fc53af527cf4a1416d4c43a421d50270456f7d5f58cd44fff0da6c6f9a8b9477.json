{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react\\\\src\\\\pages\\\\InfiniteGrid\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteGridPage = () => {\n  _s();\n  const images = ['https://images.pexels.com/photos/18173391/pexels-photo-18173391.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/24460824/pexels-photo-24460824.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/21533296/pexels-photo-21533296.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/3009205/pexels-photo-3009205.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27143629/pexels-photo-27143629.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27216502/pexels-photo-27216502.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/27139481/pexels-photo-27139481.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/17266857/pexels-photo-17266857.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/5290758/pexels-photo-5290758.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/5267760/pexels-photo-5267760.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1105766/pexels-photo-1105766.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/425160/pexels-photo-425160.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1038935/pexels-photo-1038935.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/2681319/pexels-photo-2681319.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1122409/pexels-photo-1122409.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1010079/pexels-photo-1010079.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/763097/pexels-photo-763097.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/711022/pexels-photo-711022.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1229102/pexels-photo-1229102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1115204/pexels-photo-1115204.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/3299386/pexels-photo-3299386.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/925743/pexels-photo-925743.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1258333/pexels-photo-1258333.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2', 'https://images.pexels.com/photos/1529881/pexels-photo-1529881.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'];\n  const [isDisplay, setIsDisplay] = useState(true);\n  useEffect(() => {\n    let lastClickedPlane = null;\n    let initialScreenX;\n    let initialScreenY;\n    let ww = window.innerWidth;\n    let wh = window.innerHeight;\n    class Core {\n      constructor() {\n        this.tx = 0;\n        this.ty = 0;\n        this.cx = 0;\n        this.cy = 0;\n        this.diff = 0;\n        this.on = {\n          x: 0,\n          y: 0\n        };\n        this.max = {\n          x: 0,\n          y: 0\n        };\n        this.isDragging = false;\n        this.isMoved = false;\n        this.start = {\n          x: 0,\n          y: 0\n        };\n        this.end = {\n          x: 0,\n          y: 0\n        };\n        this.tl = gsap.timeline({\n          paused: true\n        });\n        this.el = document.querySelector('.js-grid');\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.OrthographicCamera(ww / -2, ww / 2, wh / 2, wh / -2, 1, 1000);\n        this.renderer = new THREE.WebGLRenderer({\n          antialias: true,\n          alpha: true\n        });\n        this.planes = [];\n        this.raycaster = new THREE.Raycaster();\n        this.mouse = new THREE.Vector2();\n        this.onWindowResize = () => {\n          ww = window.innerWidth;\n          wh = window.innerHeight;\n          this.camera.left = ww / -2;\n          this.camera.right = ww / 2;\n          this.camera.top = wh / 2;\n          this.camera.bottom = wh / -2;\n          this.camera.updateProjectionMatrix();\n          this.renderer.setSize(ww, wh);\n          this.resize();\n        };\n        this.onClick = event => {\n          if (this.isMoved) {\n            return;\n          }\n          const imgElement = document.querySelector('img');\n          const divElement = document.querySelector('.DOM');\n          const BUTTONElement = document.querySelector('.BUTTON');\n          if (!imgElement || !divElement || !BUTTONElement) {\n            console.error(\"Elements not found\");\n            return;\n          }\n          this.mouse.x = event.clientX / window.innerWidth * 2 - 1;\n          this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n          this.raycaster.setFromCamera(this.mouse, this.camera);\n          const intersects = this.raycaster.intersectObjects(this.planes.map(plane => plane.mesh));\n          if (intersects.length > 0) {\n            const intersectedObject = intersects[0].object;\n            const plane = this.planes.find(p => p.mesh === intersectedObject);\n            if (plane) {\n              const position = plane.position.clone();\n              const {\n                width,\n                height\n              } = plane.rect;\n              const vector = position.project(this.camera);\n              const screenX = (vector.x + 1) / 2 * window.innerWidth - width / 2;\n              const screenY = -(vector.y - 1) / 2 * window.innerHeight - height / 2;\n              if (isDisplay) {\n                lastClickedPlane = plane;\n                initialScreenX = screenX;\n                initialScreenY = screenY;\n                const src = plane.el.dataset.src;\n                imgElement.src = src;\n                imgElement.style.width = `${width}px`;\n                imgElement.style.height = `${height}px`;\n                gsap.set(imgElement, {\n                  x: screenX,\n                  y: screenY\n                });\n                divElement.style.display = 'block';\n                gsap.to(imgElement, {\n                  duration: 0.7,\n                  x: window.innerWidth / 2 - width / 2,\n                  y: window.innerHeight / 2 - height / 2,\n                  ease: 'power3.inOut'\n                });\n                gsap.to(divElement, {\n                  duration: 0.7,\n                  backgroundColor: 'white',\n                  ease: 'power2.inOut'\n                });\n                gsap.to(BUTTONElement, {\n                  duration: 0.7,\n                  opacity: 1,\n                  ease: 'power2.inOut'\n                });\n                setIsDisplay(false);\n              } else if (lastClickedPlane) {\n                gsap.to(imgElement, {\n                  duration: 0.7,\n                  x: initialScreenX,\n                  y: initialScreenY,\n                  ease: 'power2.inOut'\n                });\n                gsap.to(divElement, {\n                  duration: 0.7,\n                  backgroundColor: 'transparent',\n                  ease: 'power2.inOut'\n                });\n                gsap.to(divElement, {\n                  duration: 0.7,\n                  display: 'none',\n                  ease: 'power2.inOut'\n                });\n                gsap.to(BUTTONElement, {\n                  duration: 0.1,\n                  opacity: 0,\n                  ease: 'power2.inOut'\n                });\n                setIsDisplay(true);\n              }\n            }\n          }\n        };\n        this.tick = () => {\n          const xDiff = this.tx - this.cx;\n          const yDiff = this.ty - this.cy;\n          this.cx += xDiff * 0.085;\n          this.cx = Math.round(this.cx * 100) / 100;\n          this.cy += yDiff * 0.085;\n          this.cy = Math.round(this.cy * 100) / 100;\n          this.diff = Math.max(Math.abs(yDiff * 0.0001), Math.abs(xDiff * 0.0001));\n          this.planes.length && this.planes.forEach(plane => plane.update(this.cx, this.cy, this.max, this.diff));\n          this.renderer.render(this.scene, this.camera);\n        };\n        this.onMouseMove = ({\n          clientX,\n          clientY\n        }) => {\n          if (!this.isDragging) return;\n          this.isMoved = true;\n          this.tx = this.on.x + clientX * 2.5;\n          this.ty = this.on.y - clientY * 2.5;\n        };\n        this.onMouseDown = ({\n          clientX,\n          clientY\n        }) => {\n          if (this.isDragging) return;\n          this.isMoved = false;\n          this.isDragging = true;\n          this.on.x = this.tx - clientX * 2.5;\n          this.on.y = this.ty + clientY * 2.5;\n          this.start.x = clientX;\n          this.start.y = clientY;\n        };\n        this.onMouseUp = ({\n          clientX,\n          clientY\n        }) => {\n          if (!this.isDragging) return;\n          this.isDragging = false;\n          this.end.x = clientX;\n          this.end.y = clientY;\n          if (Math.abs(this.end.x - this.start.x) < 5 && Math.abs(this.end.y - this.start.y) < 5) {\n            this.isMoved = false;\n          } else {\n            this.isMoved = true;\n          }\n        };\n        this.onTouchMove = event => {\n          event.preventDefault();\n          if (!this.isDragging) return;\n          this.isMoved = true;\n          const touch = event.touches[0];\n          this.tx = this.on.x + touch.clientX * 2.5;\n          this.ty = this.on.y - touch.clientY * 2.5;\n        };\n        this.onTouchStart = event => {\n          if (this.isDragging) return;\n          this.isMoved = false;\n          this.isDragging = true;\n          const touch = event.touches[0];\n          this.on.x = this.tx - touch.clientX * 2.5;\n          this.on.y = this.ty + touch.clientY * 2.5;\n          this.start.x = touch.clientX;\n          this.start.y = touch.clientY;\n        };\n        this.onTouchEnd = event => {\n          if (!this.isDragging) return;\n          this.isDragging = false;\n          const touch = event.changedTouches[0];\n          this.end.x = touch.clientX;\n          this.end.y = touch.clientY;\n          if (Math.abs(this.end.x - this.start.x) < 5 && Math.abs(this.end.y - this.start.y) < 5) {\n            this.isMoved = false;\n          } else {\n            this.isMoved = true;\n          }\n        };\n        this.resize = () => {\n          this.planes.forEach(plane => {\n            plane.resize();\n            plane.update(this.cx, this.cy, this.max, this.diff);\n          });\n          const {\n            bottom,\n            right\n          } = this.el.getBoundingClientRect();\n          this.max.x = right;\n          this.max.y = bottom;\n        };\n        this.camera.lookAt(this.scene.position);\n        this.camera.position.z = 1;\n        this.renderer.setSize(ww, wh);\n        this.renderer.setPixelRatio(gsap.utils.clamp(1, 1.5, window.devicePixelRatio));\n        document.body.appendChild(this.renderer.domElement);\n        this.addPlanes();\n        this.addEvents();\n        this.resize();\n      }\n      addEvents() {\n        gsap.ticker.add(this.tick);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mousedown', this.onMouseDown);\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchmove', this.onTouchMove, {\n          passive: false\n        });\n        window.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        });\n        window.addEventListener('touchend', this.onTouchEnd);\n        window.addEventListener('resize', this.onWindowResize);\n        this.el.addEventListener('click', this.onClick);\n      }\n      addPlanes() {\n        const planes = [...document.querySelectorAll('.js-plane')];\n        this.planes = planes.map((el, i) => {\n          const plane = new Plane();\n          plane.init(el, i);\n          this.scene.add(plane);\n          return plane;\n        });\n      }\n    }\n    const loader = new THREE.TextureLoader();\n    const vertexShader = `\n        precision mediump float;\n\n        uniform float u_diff;\n\n        varying vec2 vUv;\n\n        void main(){\n          vec3 pos = position;\n\n          pos.y *= 1. - u_diff;\n          pos.x *= 1. - u_diff;\n\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);;\n        }\n      `;\n    const fragmentShader = `\n        precision mediump float;\n\n        uniform vec2 u_res;\n        uniform vec2 u_size;\n        \n        uniform sampler2D u_texture;\n        \n        vec2 cover(vec2 screenSize, vec2 imageSize, vec2 uv) {\n          float screenRatio = screenSize.x / screenSize.y;\n          float imageRatio = imageSize.x / imageSize.y;\n        \n          vec2 newSize = screenRatio < imageRatio\n              ? vec2(imageSize.x * (screenSize.y / imageSize.y), screenSize.y)\n              : vec2(screenSize.x, imageSize.y * (screenSize.x / imageSize.x));\n          vec2 newOffset = (screenRatio < imageRatio\n              ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\n              : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n          return uv * screenSize / newSize + newOffset;\n        }\n        \n        float roundBox(vec2 p, vec2 b, float r){\n          return length(max(abs(p)-b+r,0.0))-r;\n        }\n        \n        varying vec2 vUv;\n        \n        void main() {\n          vec2 uv = vUv;\n        \n          vec2 uvCover = cover(u_res, u_size, uv);\n          vec4 texture = texture2D(u_texture, uvCover);\n        \n          vec2 halfSize = u_res * 0.5;\n          vec2 coord = uv * u_res;\n          vec2 p = coord - halfSize;\n        \n          float a = roundBox(p, halfSize, 24.0);\n\n          float boxAlpha = smoothstep(0.0, 1.0, a);\n        \n          vec4 finalColor = vec4(texture.rgb, texture.a * (1.0 - boxAlpha));\n        \n          gl_FragColor = finalColor;\n        }\n\n      `;\n    const geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n    const material = new THREE.ShaderMaterial({\n      fragmentShader,\n      vertexShader\n    });\n    class Plane extends THREE.Object3D {\n      constructor(...args) {\n        super(...args);\n        this.el = void 0;\n        this.x = 0;\n        this.y = 0;\n        this.my = 1;\n        this.geometry = geometry;\n        this.material = material.clone();\n        this.texture = void 0;\n        this.mesh = void 0;\n        this.rect = void 0;\n        this.xOffset = 0;\n        this.yOffset = 0;\n        this.update = (x, y, max, diff) => {\n          const {\n            right,\n            bottom\n          } = this.rect;\n          const {\n            u_diff\n          } = this.material.uniforms;\n          this.y = gsap.utils.wrap(-(max.y - bottom), bottom, y * this.my) - this.yOffset;\n          this.x = gsap.utils.wrap(-(max.x - right), right, x) - this.xOffset;\n          u_diff.value = diff;\n          this.position.x = this.x;\n          this.position.y = this.y;\n        };\n      }\n      init(el, i) {\n        this.el = el;\n        this.my = 1;\n        this.material.uniforms = {\n          u_texture: {\n            value: 0\n          },\n          u_res: {\n            value: new THREE.Vector2(1, 1)\n          },\n          u_size: {\n            value: new THREE.Vector2(1, 1)\n          },\n          u_diff: {\n            value: 0\n          }\n        };\n        this.texture = loader.load(this.el.dataset.src, texture => {\n          texture.minFilter = THREE.LinearFilter;\n          texture.generateMipmaps = false;\n          const {\n            naturalWidth,\n            naturalHeight\n          } = texture.image;\n          const {\n            u_size,\n            u_texture\n          } = this.material.uniforms;\n          u_texture.value = texture;\n          u_size.value.x = naturalWidth;\n          u_size.value.y = naturalHeight;\n        });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.add(this.mesh);\n        this.resize();\n      }\n      resize() {\n        this.rect = this.el.getBoundingClientRect();\n        const {\n          left,\n          top,\n          width,\n          height\n        } = this.rect;\n        const {\n          u_res\n        } = this.material.uniforms;\n        this.xOffset = left + width / 2 - window.innerWidth / 2;\n        this.yOffset = top + height / 2 - window.innerHeight / 2;\n        this.position.x = this.xOffset;\n        this.position.y = this.yOffset;\n        u_res.value.x = width;\n        u_res.value.y = height;\n        this.mesh.scale.set(width, height, 1);\n      }\n    }\n    new Core();\n  }, [isDisplay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed w-[150%] h-[200%]  z-[0] grid 2xl:grid-cols-[repeat(6,1fr)] xl:grid-cols-[repeat(4,1fr)] lg:grid-cols-[repeat(4,1fr)] md:grid-cols-[repeat(3,1fr)] grid-cols-[repeat(3,1fr)] left-0 top-0 js-grid\",\n        children: images.map((src, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"js-plane inset-2 absolute m-0 p-0\",\n              \"data-src\": src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page js-page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DOM w-screen h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"rounded-3xl object-cover\",\n          alt: \"alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BUTTON fixed bottom-[15%] opacity-0 w-full flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-[#090909] text-lg cursor-pointer  transition-all duration-[0.3s] shadow-[6px_6px_12px_#c5c5c5,-6px_-6px_12px_#ffffff] px-[1.7em] py-[0.7em] rounded-[0.5em] border-solid border-[#e8e8e8] active:text-[#666] active:shadow-[inset_4px_4px_12px_#c5c5c5,inset_-4px_-4px_12px_#ffffff]\",\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteGridPage, \"ruoXJQOtOSaaJHRO2Slj2grkdmI=\");\n_c = InfiniteGridPage;\nexport default InfiniteGridPage;\nvar _c;\n$RefreshReg$(_c, \"InfiniteGridPage\");","map":{"version":3,"names":["useState","useEffect","THREE","gsap","jsxDEV","_jsxDEV","InfiniteGridPage","_s","images","isDisplay","setIsDisplay","lastClickedPlane","initialScreenX","initialScreenY","ww","window","innerWidth","wh","innerHeight","Core","constructor","tx","ty","cx","cy","diff","on","x","y","max","isDragging","isMoved","start","end","tl","timeline","paused","el","document","querySelector","scene","Scene","camera","OrthographicCamera","renderer","WebGLRenderer","antialias","alpha","planes","raycaster","Raycaster","mouse","Vector2","onWindowResize","left","right","top","bottom","updateProjectionMatrix","setSize","resize","onClick","event","imgElement","divElement","BUTTONElement","console","error","clientX","clientY","setFromCamera","intersects","intersectObjects","map","plane","mesh","length","intersectedObject","object","find","p","position","clone","width","height","rect","vector","project","screenX","screenY","src","dataset","style","set","display","to","duration","ease","backgroundColor","opacity","tick","xDiff","yDiff","Math","round","abs","forEach","update","render","onMouseMove","onMouseDown","onMouseUp","onTouchMove","preventDefault","touch","touches","onTouchStart","onTouchEnd","changedTouches","getBoundingClientRect","lookAt","z","setPixelRatio","utils","clamp","devicePixelRatio","body","appendChild","domElement","addPlanes","addEvents","ticker","add","addEventListener","passive","querySelectorAll","i","Plane","init","loader","TextureLoader","vertexShader","fragmentShader","geometry","PlaneGeometry","material","ShaderMaterial","Object3D","args","my","texture","xOffset","yOffset","u_diff","uniforms","wrap","value","u_texture","u_res","u_size","load","minFilter","LinearFilter","generateMipmaps","naturalWidth","naturalHeight","image","Mesh","scale","children","className","index","fileName","_jsxFileName","lineNumber","columnNumber","alt","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/react/src/pages/InfiniteGrid/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport * as THREE from 'three'\nimport { gsap } from 'gsap'\n\nconst InfiniteGridPage = () => {\n  const images = [\n    'https://images.pexels.com/photos/18173391/pexels-photo-18173391.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/24460824/pexels-photo-24460824.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/21533296/pexels-photo-21533296.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/3009205/pexels-photo-3009205.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27143629/pexels-photo-27143629.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27216502/pexels-photo-27216502.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/27139481/pexels-photo-27139481.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/17266857/pexels-photo-17266857.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/5290758/pexels-photo-5290758.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/5267760/pexels-photo-5267760.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1105766/pexels-photo-1105766.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/425160/pexels-photo-425160.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1038935/pexels-photo-1038935.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/2681319/pexels-photo-2681319.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1122409/pexels-photo-1122409.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1010079/pexels-photo-1010079.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/763097/pexels-photo-763097.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/711022/pexels-photo-711022.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1229102/pexels-photo-1229102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1115204/pexels-photo-1115204.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/3299386/pexels-photo-3299386.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/925743/pexels-photo-925743.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1258333/pexels-photo-1258333.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/1529881/pexels-photo-1529881.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'\n  ]\n\n  const [isDisplay, setIsDisplay] = useState(true)\n\n  useEffect(() => {\n    let lastClickedPlane: Plane | null = null\n    let initialScreenX: number\n    let initialScreenY: number\n\n    let ww = window.innerWidth\n    let wh = window.innerHeight\n\n    class Core {\n      tx = 0\n      ty = 0\n      cx = 0\n      cy = 0\n      diff = 0\n      on = { x: 0, y: 0 }\n      max = { x: 0, y: 0 }\n      isDragging = false\n      isMoved = false\n      start = { x: 0, y: 0 }\n      end = { x: 0, y: 0 }\n      tl = gsap.timeline({ paused: true })\n      el = document.querySelector('.js-grid') as HTMLElement\n      scene = new THREE.Scene()\n      camera = new THREE.OrthographicCamera(\n        ww / -2,\n        ww / 2,\n        wh / 2,\n        wh / -2,\n        1,\n        1000\n      )\n      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n      planes: Plane[] = []\n      raycaster = new THREE.Raycaster()\n      mouse = new THREE.Vector2()\n\n      constructor() {\n        this.camera.lookAt(this.scene.position)\n        this.camera.position.z = 1\n        this.renderer.setSize(ww, wh)\n        this.renderer.setPixelRatio(\n          gsap.utils.clamp(1, 1.5, window.devicePixelRatio)\n        )\n        document.body.appendChild(this.renderer.domElement)\n        this.addPlanes()\n        this.addEvents()\n        this.resize()\n      }\n\n      addEvents() {\n        gsap.ticker.add(this.tick)\n\n        window.addEventListener('mousemove', this.onMouseMove)\n        window.addEventListener('mousedown', this.onMouseDown)\n        window.addEventListener('mouseup', this.onMouseUp)\n        window.addEventListener('touchmove', this.onTouchMove, {\n          passive: false\n        })\n        window.addEventListener('touchstart', this.onTouchStart, {\n          passive: false\n        })\n        window.addEventListener('touchend', this.onTouchEnd)\n        window.addEventListener('resize', this.onWindowResize)\n        this.el.addEventListener('click', this.onClick)\n      }\n\n      addPlanes() {\n        const planes = [...document.querySelectorAll('.js-plane')]\n        this.planes = planes.map((el, i) => {\n          const plane = new Plane()\n          plane.init(el as HTMLElement, i)\n          this.scene.add(plane)\n          return plane\n        })\n      }\n      onWindowResize = () => {\n        ww = window.innerWidth\n        wh = window.innerHeight\n\n        this.camera.left = ww / -2\n        this.camera.right = ww / 2\n        this.camera.top = wh / 2\n        this.camera.bottom = wh / -2\n        this.camera.updateProjectionMatrix()\n\n        this.renderer.setSize(ww, wh)\n        this.resize()\n      }\n\n      onClick = (event: MouseEvent) => {\n        if (this.isMoved) {\n          return\n        }\n\n        const imgElement = document.querySelector('img') as HTMLImageElement\n        const divElement = document.querySelector('.DOM') as HTMLDivElement\n        const BUTTONElement = document.querySelector(\n          '.BUTTON'\n        ) as HTMLDivElement\n\n        if (!imgElement || !divElement || !BUTTONElement) {\n          console.error(\"Elements not found\");\n          return;\n        }\n\n        this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1\n        this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1\n        this.raycaster.setFromCamera(this.mouse, this.camera)\n        const intersects = this.raycaster.intersectObjects(\n          this.planes.map((plane) => plane.mesh)\n        )\n\n        if (intersects.length > 0) {\n          const intersectedObject = intersects[0].object as THREE.Mesh\n          const plane = this.planes.find((p) => p.mesh === intersectedObject)\n\n          if (plane) {\n            const position = plane.position.clone()\n            const { width, height } = plane.rect\n            const vector = position.project(this.camera)\n            const screenX = ((vector.x + 1) / 2) * window.innerWidth - width / 2\n            const screenY =\n              (-(vector.y - 1) / 2) * window.innerHeight - height / 2\n\n            if (isDisplay) {\n              lastClickedPlane = plane\n              initialScreenX = screenX\n              initialScreenY = screenY\n\n              const src = plane.el.dataset.src!\n              imgElement.src = src\n              imgElement.style.width = `${width}px`\n              imgElement.style.height = `${height}px`\n\n              gsap.set(imgElement, {\n                x: screenX,\n                y: screenY\n              })\n\n              divElement.style.display = 'block'\n              gsap.to(imgElement, {\n                duration: 0.7,\n                x: window.innerWidth / 2 - width / 2,\n                y: window.innerHeight / 2 - height / 2,\n                ease: 'power3.inOut'\n              })\n\n              gsap.to(divElement, {\n                duration: 0.7,\n                backgroundColor: 'white',\n                ease: 'power2.inOut'\n              })\n\n              gsap.to(BUTTONElement, {\n                duration: 0.7,\n                opacity: 1,\n                ease: 'power2.inOut'\n              })\n\n              setIsDisplay(false)\n            } else if (lastClickedPlane) {\n              gsap.to(imgElement, {\n                duration: 0.7,\n                x: initialScreenX,\n                y: initialScreenY,\n                ease: 'power2.inOut'\n              })\n\n              gsap.to(divElement, {\n                duration: 0.7,\n                backgroundColor: 'transparent',\n                ease: 'power2.inOut'\n              })\n\n              gsap.to(divElement, {\n                duration: 0.7,\n                display: 'none',\n                ease: 'power2.inOut'\n              })\n\n              gsap.to(BUTTONElement, {\n                duration: 0.1,\n                opacity: 0,\n                ease: 'power2.inOut'\n              })\n\n              setIsDisplay(true)\n            }\n          }\n        }\n      }\n\n      tick = () => {\n        const xDiff = this.tx - this.cx\n        const yDiff = this.ty - this.cy\n\n        this.cx += xDiff * 0.085\n        this.cx = Math.round(this.cx * 100) / 100\n\n        this.cy += yDiff * 0.085\n        this.cy = Math.round(this.cy * 100) / 100\n\n        this.diff = Math.max(Math.abs(yDiff * 0.0001), Math.abs(xDiff * 0.0001))\n\n        this.planes.length &&\n          this.planes.forEach((plane) =>\n            plane.update(this.cx, this.cy, this.max, this.diff)\n          )\n\n        this.renderer.render(this.scene, this.camera)\n      }\n\n      onMouseMove = ({ clientX, clientY }: MouseEvent) => {\n        if (!this.isDragging) return\n        this.isMoved = true\n        this.tx = this.on.x + clientX * 2.5\n        this.ty = this.on.y - clientY * 2.5\n      }\n\n      onMouseDown = ({ clientX, clientY }: MouseEvent) => {\n        if (this.isDragging) return\n        this.isMoved = false\n        this.isDragging = true\n        this.on.x = this.tx - clientX * 2.5\n        this.on.y = this.ty + clientY * 2.5\n        this.start.x = clientX\n        this.start.y = clientY\n      }\n\n      onMouseUp = ({ clientX, clientY }: MouseEvent) => {\n        if (!this.isDragging) return\n        this.isDragging = false\n        this.end.x = clientX\n        this.end.y = clientY\n\n        if (\n          Math.abs(this.end.x - this.start.x) < 5 &&\n          Math.abs(this.end.y - this.start.y) < 5\n        ) {\n          this.isMoved = false\n        } else {\n          this.isMoved = true\n        }\n      }\n\n      onTouchMove = (event: TouchEvent) => {\n        event.preventDefault()\n        if (!this.isDragging) return\n        this.isMoved = true\n        const touch = event.touches[0]\n        this.tx = this.on.x + touch.clientX * 2.5\n        this.ty = this.on.y - touch.clientY * 2.5\n      }\n\n      onTouchStart = (event: TouchEvent) => {\n        if (this.isDragging) return\n        this.isMoved = false\n        this.isDragging = true\n        const touch = event.touches[0]\n        this.on.x = this.tx - touch.clientX * 2.5\n        this.on.y = this.ty + touch.clientY * 2.5\n        this.start.x = touch.clientX\n        this.start.y = touch.clientY\n      }\n\n      onTouchEnd = (event: TouchEvent) => {\n        if (!this.isDragging) return\n        this.isDragging = false\n        const touch = event.changedTouches[0]\n        this.end.x = touch.clientX\n        this.end.y = touch.clientY\n\n        if (\n          Math.abs(this.end.x - this.start.x) < 5 &&\n          Math.abs(this.end.y - this.start.y) < 5\n        ) {\n          this.isMoved = false\n        } else {\n          this.isMoved = true\n        }\n      }\n\n      resize = () => {\n        this.planes.forEach((plane) => {\n          plane.resize()\n          plane.update(this.cx, this.cy, this.max, this.diff)\n        })\n        const { bottom, right } = this.el.getBoundingClientRect()\n\n        this.max.x = right\n        this.max.y = bottom\n      }\n    }\n    const loader = new THREE.TextureLoader()\n\n    const vertexShader = `\n        precision mediump float;\n\n        uniform float u_diff;\n\n        varying vec2 vUv;\n\n        void main(){\n          vec3 pos = position;\n\n          pos.y *= 1. - u_diff;\n          pos.x *= 1. - u_diff;\n\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);;\n        }\n      `\n\n    const fragmentShader = `\n        precision mediump float;\n\n        uniform vec2 u_res;\n        uniform vec2 u_size;\n        \n        uniform sampler2D u_texture;\n        \n        vec2 cover(vec2 screenSize, vec2 imageSize, vec2 uv) {\n          float screenRatio = screenSize.x / screenSize.y;\n          float imageRatio = imageSize.x / imageSize.y;\n        \n          vec2 newSize = screenRatio < imageRatio\n              ? vec2(imageSize.x * (screenSize.y / imageSize.y), screenSize.y)\n              : vec2(screenSize.x, imageSize.y * (screenSize.x / imageSize.x));\n          vec2 newOffset = (screenRatio < imageRatio\n              ? vec2((newSize.x - screenSize.x) / 2.0, 0.0)\n              : vec2(0.0, (newSize.y - screenSize.y) / 2.0)) / newSize;\n          return uv * screenSize / newSize + newOffset;\n        }\n        \n        float roundBox(vec2 p, vec2 b, float r){\n          return length(max(abs(p)-b+r,0.0))-r;\n        }\n        \n        varying vec2 vUv;\n        \n        void main() {\n          vec2 uv = vUv;\n        \n          vec2 uvCover = cover(u_res, u_size, uv);\n          vec4 texture = texture2D(u_texture, uvCover);\n        \n          vec2 halfSize = u_res * 0.5;\n          vec2 coord = uv * u_res;\n          vec2 p = coord - halfSize;\n        \n          float a = roundBox(p, halfSize, 24.0);\n\n          float boxAlpha = smoothstep(0.0, 1.0, a);\n        \n          vec4 finalColor = vec4(texture.rgb, texture.a * (1.0 - boxAlpha));\n        \n          gl_FragColor = finalColor;\n        }\n\n      `\n\n    const geometry = new THREE.PlaneGeometry(1, 1, 1, 1)\n    const material = new THREE.ShaderMaterial({\n      fragmentShader,\n      vertexShader\n    })\n\n    class Plane extends THREE.Object3D {\n      el!: HTMLElement\n      x = 0\n      y = 0\n      my = 1\n      geometry = geometry\n      material = material.clone()\n      texture!: THREE.Texture\n      mesh!: THREE.Mesh\n      rect!: DOMRect\n      xOffset = 0\n      yOffset = 0\n      declare position: any\n\n      init(el: HTMLElement, i: number) {\n        this.el = el\n        this.my = 1\n\n        this.material.uniforms = {\n          u_texture: { value: 0 },\n          u_res: { value: new THREE.Vector2(1, 1) },\n          u_size: { value: new THREE.Vector2(1, 1) },\n          u_diff: { value: 0 }\n        }\n\n        this.texture = loader.load(\n          this.el.dataset.src!,\n          (texture: {\n            minFilter: number\n            generateMipmaps: boolean\n            image: { naturalWidth: any; naturalHeight: any }\n          }) => {\n            texture.minFilter = THREE.LinearFilter\n            texture.generateMipmaps = false\n\n            const { naturalWidth, naturalHeight } = texture.image\n            const { u_size, u_texture } = this.material.uniforms\n\n            u_texture.value = texture\n            u_size.value.x = naturalWidth\n            u_size.value.y = naturalHeight\n          }\n        )\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material)\n        this.add(this.mesh)\n\n        this.resize()\n      }\n\n      update = (\n        x: number,\n        y: number,\n        max: { x: number; y: number },\n        diff: number\n      ) => {\n        const { right, bottom } = this.rect\n        const { u_diff } = this.material.uniforms\n\n        this.y =\n          gsap.utils.wrap(-(max.y - bottom), bottom, y * this.my) - this.yOffset\n        this.x = gsap.utils.wrap(-(max.x - right), right, x) - this.xOffset\n\n        u_diff.value = diff\n\n        this.position.x = this.x\n        this.position.y = this.y\n      }\n\n      resize() {\n        this.rect = this.el.getBoundingClientRect()\n\n        const { left, top, width, height } = this.rect\n        const { u_res } = this.material.uniforms\n\n        this.xOffset = left + width / 2 - window.innerWidth / 2\n        this.yOffset = top + height / 2 - window.innerHeight / 2\n\n        this.position.x = this.xOffset\n        this.position.y = this.yOffset\n\n        u_res.value.x = width\n        u_res.value.y = height\n\n        this.mesh.scale.set(width, height, 1)\n      }\n    }\n\n    new Core()\n  }, [isDisplay])\n\n  return (\n    <div>\n      <div>\n        <div className='fixed w-[150%] h-[200%]  z-[0] grid 2xl:grid-cols-[repeat(6,1fr)] xl:grid-cols-[repeat(4,1fr)] lg:grid-cols-[repeat(4,1fr)] md:grid-cols-[repeat(3,1fr)] grid-cols-[repeat(3,1fr)] left-0 top-0 js-grid'>\n          {images.map((src, index) => {\n            return (\n              <div className='relative' key={index}>\n                <figure\n                  className='js-plane inset-2 absolute m-0 p-0'\n                  data-src={src}\n                ></figure>\n              </div>\n            )\n          })}\n        </div>\n        <div className='page js-page'></div>\n        <div className='DOM w-screen h-screen'>\n          <img className='rounded-3xl object-cover' alt='alt' />\n        </div>\n      </div>\n      <div className='BUTTON fixed bottom-[15%] opacity-0 w-full flex justify-center'>\n        <button className='text-[#090909] text-lg cursor-pointer  transition-all duration-[0.3s] shadow-[6px_6px_12px_#c5c5c5,-6px_-6px_12px_#ffffff] px-[1.7em] py-[0.7em] rounded-[0.5em] border-solid border-[#e8e8e8] active:text-[#666] active:shadow-[inset_4px_4px_12px_#c5c5c5,inset_-4px_-4px_12px_#ffffff]'>\n          Click me\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default InfiniteGridPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}